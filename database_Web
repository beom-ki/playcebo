 8/1 자기계발 시간
   p96까지 책 읽고, 기억나는 대로 페이지의 뼈대 만들기
   다음에는 하이퍼링크를 배워서 누르면 넘어가게 만들고 싶다.
 8/3 자기계발 시간
   생활코딩 강좌를 보면서 내가 시도해보고 싶었던 것을 시도해봤다. 표도 만들어봤다.
   필요한 부분을 찾아가며 공부하니까 더 재미있다. 이 사이트가 내가 만든 거라니!! 표 칸 크기 조정하는 등 세부 스타일 공부하고 싶다. 외출 때 집 가서 웹호스팅 웹서버 운영 실습하고 싶다.
 8/5 휴무, 자기계발 시간
   휴무 때 핫스팟을 이용해 WEB1 강좌 다 수강.
   웹서버 운영 실습했는데 전세계의 모든 사람이 접속하게 하려면 훨씬 더 많은 조건이 필요하다는 것을 깨달았다. 그리고 다른 사람이 내 웹사이트에 들어와 글을 쓰는 것도 백엔드 기술이 필요하다. 앞으로 WEB2 강의도 들어보면서 이러한 한계점들을 보완하고 싶다. 자계 시간에 '이미지와 하이퍼링크'까지 책으로 복습하였다. 영상에 없는 부분이지만 target속성, 링크 css 부분은 시험삼아 적용해보았다. 나중에 오랫동안 이 페이지에 글을 쓰면 월마다 이동하는 앵커가 필요할 것 같아서 적용해보았다.
 8/7 주간거점 기대마
   4과 폼 관련 태그들 단원을 읽어보았다.
   굉장히 활용도가 높은 태그들인 것 같다. 하지만 이 태그들을 완벽히 활용하려면 백엔드 기술이 필요하다. CSS부터 빨리 배우고 데이터베이스, PHP 등 백엔드 기술을 배우고 싶은 마음이 타오른다.
 8/11 저녁
   생활코딩 CSS 강좌 속성, 선택자까지 보고, 사이트에 폼 관련 태그들을 모양이나마 구성해보았다.
   '이제 무엇을 모르는지 알게 되었다'는 말이 되게 와닿았다. 처음에 a 태그 글씨를 검정색으로 바꾸는 코드를 책에서 복붙했었는데 이제는 의미도 알게 되었다. 그리고 내가 원하는 속성과 선택자를 찾기 위해 검색하는 방법도 배웠다. 폼 태그들도 익숙해지기 위해 어느정도 연습해보았다. 그런데 버튼태그를 링크로 연결하려면 JS가 필요해서 못 하였다. 대신 CSS를 이용해 버튼처럼만 보이도록 꾸며놓았다. 앞으로 CSS와 폼태그를 이용해 어떻게 사이트를 보기 좋게 할 수 있을지 컴퓨터 없을때도 고민해봐야겠다.
 8/12 주간거점 기대마
   웹 책 CSS 텍스트 스타일까지 읽었다.
   확실히 생활코딩 강의보다 와닿는 것은 없는 것 같다. 선택자와 속성을 나열하는 식으로 설명이 되어있어 안 외우면 큰일 날 것 같은 느낌이 든다. 하지만 조급해하지말자. 생활코딩의 말처럼 찾아서 알 수 있는 것은 아는 것이나 다름없으니까. 저 앞쪽에 써놓았던 표 스타일을 이제 찾아볼 때인 것 같다. 다음에 낮에 여유가 생긴다면 칸 조정, 표 모양 등 더 이쁜 것들로 찾아볼 생각이다.
 8/13 자기계발시간
   생활코딩 강의 마무리부분만 남겨놓고 다 들었다.
   박스모델, 그리드, 미디어쿼리 등 웹페이지의 틀을 짜는데 굉장히 중요한 부분을 배운 것 같다. 그래서인지 너무 재미있게 들었고, 하나하나 다 적용해보려고 최대한 노력해보았다. 그 결과 페이지가 조금 더 예뻐진 것 같다. 뿌듯함에 의한 그냥 기분탓인가? ㅎㅎ 아 그리고 그리드를 이용하면 표 칸 너비 등을 좀 더 이쁘게 조정할 수 있을 것 같다. 나중에 시도해봐야겠다.
 8/14 자기계발시간
   CSS 강의를 끝까지 다 들었다.
   너무 재밌어서 파이썬 공부를 할래야 할 수가 없다. 내가 하고싶은 것에 적용하면서 하다보니 확실히 더 재밌는 것 같다. 내일모레 외출 때 자바스크립트 강의를 다운받아 올 생각이다.
 8/19 집, 자기계발시간
   저번에 계획했던 표 이쁘게 꾸미기를 2.html에만 적용해보았다. JS강좌 조건문 이전까지 들었다.
   tablestyle.css에 table{} 빈칸인 스타일을 넣느냐 안 넣느냐에 따라 결과가 달라진다. 빈칸인 스타일이 무엇을 의미하는지 찾아봐야겠다. 3~9.html에도 적용해야 하는데 반복작업이 어느정도 있어서 귀찮다. 이것은 앞으로 Web2-Python 강좌를 들으면 해결될 것 같다. 그때를 위해서 아껴둬야겠다. Web2-JS 강좌를 통해서 이번에도 무엇을 모르는지 깨달을 수 있었다. JS로 글자색을 지정했을 때 a태그의 글자색이 변하지 않는다. 다음에 이유를 알아봐야겠다.
 8/20 저녁
   어제 자바스크립트를 공부하면서 느꼈던 의문을 해결하는 시간을 가졌다.
   queryselector('a')를 쓰면 맨 처음 a 태그만 선택된다는 것을 크롬 콘솔창을 통해 깨달았다. 선임분의 도움을 받아 그럴 때는 querySelectorAll을 쓰면 된다는 것과, forEach를 통해 선택된 모든 태그에 함수를 적용하는 것도 알게되었다. 모르는 것을 해결해가는 과정이 너무 즐거웠다. table{} 스타일은 아직 해결 못 했지만, 다음에 좀 더 의미있는 문법으로 바꾸는 과정을 해봐야겠다.
 8/22 오후
   tablestyle을 손봤다.
   table 전체에 적용하면 th, td 태그가 부모태그에 영향을 받는 것 같아서 table에 class를 넣어서 빈태그는 없게 만들었는데 중복이 있다. 이 중복은 아무리 해도 고쳐지지가 않는다. CSS에서 style을 적용할 때 순서에 영향을 받아 이런 일이 발생하는 것 같다. 책을 통해 순서에 관해서 더 봐야할 것 같다.
 8/23 자기계발시간
   tablestyle을 손봤다가 망했다. JS 강의를 반복문까지 들었다. 이 내용을 이용해서 index.html의 목록을 좀 더 유연하게 수정하였다.
   찝찝해서 계속 어제 아쉬웠던 부분을 고쳐보았다. 책도 읽어보고 구글링도 해봤는데 해결책이 나오지 않는다. 그래서 원래 상태로 돌아가려 했는데 어제랑 똑같이 코드를 만들어도 실패하였다. 진짜 제대로 CSS 공부를 하려면 캐스캐이딩에 관해 파야할 것 같다. 파이썬 배울 때까지 못 참을 것 같아 노가다로 다른 항목들 표 스타일도 적용하였다. 파이썬의 필요를 더욱 느끼게 되었다. 오늘 강의에서 내가 저번에 끙끙대던 forEach 관련한 반복문 부분이 나왔다. 영상은 다른 방법으로 해결했지만 혼자 찾아보는 과정이 의미있었던 것 같다.
 8/25 오후
   JS강의를 객체까지 수강하였다. 그리고 내 웹페이지에 적용해보았다.
   이제 5강정도만 더 들으면 JS강의도 끝이다. 웹이 제일 재밌어서 너무 웹만 공부하고 있는 것 같긴 하지만 그래도 언젠가 꾸준히 할 기회가 오겠지 ㅎㅎ 함수와 객체라는 JS에서 큰 산 두개를 배웠다. 그래서 저번에 짜놓았던 onclick="" 안에 있던 코드를 함수와 객체를 이용해서 나중에도 보기 쉽게 정리해보았다. 외관상으로는 달라진 게 없지만 서버상으로는 많이 안정됐을 것이다. 아직 함수가 간단한 수준이어서 객체는 사실 적용해서 이점은 모르겠지만 나중에 언젠가 크게 써먹을 일이 있을 것 같다.
 8/26 주간거점 기대마, 자기계발시간
   Web 책을 박스모델까지 읽었다. 강좌 1개 들었다.
   책은 너무 지엽적으로 속성별로 알려주는 것 같아 약간 머리에 안 들어오는 느낌이 들었다. 그래도 생활코딩 말처럼 무엇을 모르는지 알면 찾아라도 볼 수 있으니까 나중에 찾아볼 수 있다라는 생각으로 읽었다. 'display : inline-block'은 'display : grid'랑 비슷하지만 활용할 점이 많을 것 같았고, 백그라운드 이미지도 나중에 페이지를 더 이쁘게 꾸밀 때 많이 쓰일 것 같다. 다음에는 책과 강의를 마저 다 마스터하고 나중에 시간 여유 있을 때 실제 여러 사이트들을 방문해보거나 W3C 페이지의 How to 를 이용해 실제 상용화되는 페이지같이 꾸미고 싶다. 역시 생활코딩이다..! 어제 코드를 많이 손 보면서 head 부분에 객체와 함수 정의가 길게 된 게 거슬렸는데 오늘 파일에 나눠서 정리하기를 배움으로써 해결되었다. 안 알려줄리가 없지. 그리고 모든 웹에 버튼을 적용하려 했는데 버튼을 눌렀을 때 표의 경계 색도 변하게 하고 싶었는데 실패했다. 다음에 인터넷 될 때 JS로 border style을 바꾸는 방법을 찾아보고 다시 시도해봐야겠다.
 8/28 자기계발시간
   Javascript 강의를 끝까지 다 들었다.
   여운이 되게 깊게 남으면서도 막막함이 든다. 아직 알아야할 게 너무 많은 것 같다. 하지만 너무 조급해하지 않아야 하는 것을 알기에 천천히 내 프로젝트를 진행해 볼 생각이다. 일단 내일 JS border style에 관해 찾아보고 jQuery코드를 다운받아서 적용해야겠다. 그리고 background에 이미지 등을 삽입해보고 여러 사이트들을 참고해 Playcebo를 앞으로 어떤 식으로 꾸며나갈지 청사진을 그려봐야겠다.
 8/29 오후, 자기계발시간
   어제 계획 세웠던 것을 해보았다. 자기계발 시간에는 Home Server 강의를 들었다.
   border style은 조금만 바로 잡으면 되었고, jQuery 를 이용하니까 더 혁명적으로 반복문을 처리할 수 있는 게 너무 신기했다. 앞으로 jQuery도 배우고 싶은 마음이 생겼다. 사이트들도 들어가보고 W3C의 How to도 참고해보았는데 실존 사이트들은 이해하기 너무 어려운 점이 많았다. How to는 도움이 많이 될 것 같다. library 처럼 가져다 쓰면 될 것 같은 느낌이 들었다. 그런데 이것도 다 이해하고 쓰려면 찾아보면서 해야할 것 같다. 나중 가면 확실히 필요한 내용이긴 하다. 언제까지 깃허브에 주소를 빌릴 순 없지 않는가. 그런데 집에서 공유기랑 함께 실습하면서 해야 더 와닿을 것 같다. 아직 IP로밖에 접속을 못 하지만 앞으로 Playcebo.com이라는 이름으로 접속 가능하게 하고싶다.
 8/30 오후, 자기계발시간
   오후에 Home Server 강의를 마무리했다. 자기계발시간에는 배경이미지를 적용해보았다.
   IP주소와 인터넷이 어떻게 동작하는지 알 수 있었지만 유동 IP에 대한 해결책이 아직 안 나와서 후련하지 않다. unsplash라는 사이트에서 어울릴법한 이미지를 미리 다운 받아놓고 배경이미지를 적용해보았다. 이미지를 적용하니까 확실히 이쁘다. 야간모드 버튼을 눌렀을 때 배경이미지도 바뀌게 하려고 느낌대로 시도해봤는데 역시 실행이 안 됐다.. 감이 없는건가ㅜㅜ 내일 인터넷에 정확히 찾아볼 예정이다. 또 style.css에 body태그 스타일로 추가하면 실행이 안 되고 index.html에 직접 추가해야만 실행이 됐다. 왜 그러는지 알아봐야겠다. def.html을 좀 이쁘게 꾸며봤다. 글씨가 잘 눈에 안 띄어서 배경이미지 흐리게 하는 방법을 알아볼 것이고 blockquote 부분이 마음에 안 드는데 어떻게 하면 이쁘게 할지 고민해봐야겠다. how to를 참고해서 이쁜 게 있으면 써먹어봐야겠다. 8/31에 버튼으로 배경이미지 바꾸게만 바꿔보았다. 그런데 객체로 배경이미지 함수를 적용했을 때는 실행이 안 되고 직접 그 코드를 넣으면 되었다. 이 부분에 관해서 알아봐야겠다. 배경이미지를 흐리게 하는 것과 ul태그로 글을 쓸 때 표처럼 크기를 제한하지 않으니까 글이 우주끝까지 뻗어나가려 한다. 그걸 제한하는 것도 알아봐야겠다. 주식일지랑 표, 수학에 어울리는 배경도 찾아보자.
 9/2 자기계발 시간
   DNS의 원리 전까지 강의를 들었고, playcebo 발전방향에 관해서 고민해봤다.
   확실히 DNS 강좌를 끝까지 들으면 유익한 점이 많을 것 같다. 빨리 모든 사람이 playcebo.com으로 내 사이트에 접속하게 하고 싶다. 주간 모드, 야간 모드를 버튼 누름에 따라 바꾸는 것 말고도 자동으로 시간을 파악해서 변하는 기능도 알아봐야겠다. GTQ 1급 시험 디데이 표시 함수도 만들어야겠다.
 9/3 자기계발 시간
   몇 가지를 더 깔끔하게 손 보고 dday 표시 함수를 추가해봤다. DNS 강좌 몇 개 들었다.
   배경이미지 버튼이 안 되었던 것은 image가 변수로 인식되지 않아서였다. "url()"에 쌓여있다보니까 따로 참조를 하거나 +로 붙여줬어야 한다. style.css에 body 선택자로 배경이미지를 넣으면 적용이 안 되고 이 또한 파일에 직접 넣어야 적용이 된다. 왜 그런지 알아봐야겠다. 그리고 빈 body{}스타일을 빼면 갑자기 a tag의 색 속성도 사라진다.. diary에서 ul태그로 작성한 부분의 크기를 div태그로 묶어서 width 속성으로 제한하려 했는데 제한하니까 오히려 유동적이지 않게 되고, 배경 크기문제는 똑같아서 그냥 배경이미지를 다른 것으로 바꿨다. dday 표시에 스타일을 적용하기 위해 body 태그 전체를 선택하고 나머지를 다시 덧씌우는 방식으로 했는데 script 태그로 나온 결과에만 스타일 적용할 수 있는 방법을 찾아봐야겠다. public DNS 1.1.1.1 적용해봐야겠다. -> 9/4일 낮에 알아본 결과 외부 css 파일로 적용하려면 style태그로 묶으면 안 된다. 이것이 문제의 원인이었다. 배경이미지만 흐리게 하는 것도 배경이미지만 따로 div 태그로 묶어서 적용하면 되었다. 근데 이 과정은 약간 불편한 것 같다. 나중에 GTQ를 배우면 아예 이미지를 흐리게 편집한 다음 배경이미지로 삽입하는 것이 더 나을 것 같다. Javascript output에 스타일을 적용하려면 document.write 안에 span 태그를 넣어서 class를 지정하면 되었다.
 9/6 기대마, 자기계발 시간
   책 가상클래스 선택자까지 읽었다. def.html을 조금 더 이쁘게 꾸미려 해보았다.
   책에서 앞의 영상이나 소리 삽입은 와닿지 않아서 집중이 안 되었는데 클래스 선택자의 새로운 방법과 가상 클래스 선택자는 그동안 궁금했던 것과도 연관돼있어 재밌었다. W3C의 How To에서 Hover dropdowns와 Click dropdowns를 적용해보려했는데 hover는 책에 나온 것처럼 :hover만 추가해주면 된다. 하지만 click은 한 번 클릭하면 계속 나오게 하고, 다른 부분을 클릭하면 없어지게 하는 게 목적이었는데 그 과정이 생각보다 어려운 것 같았다. 비슷한 게 :active가 있는데 이것은 계속 누르고 있어야만 창이 표시되어서 간단하지만 불필요했다. 일단 코드를 베껴서 실행해봤는데 target 변수가 빠져서 오류가 발생한 것 같다. 내일 인터넷 될 때 다시 한 번 알아볼 생각이다. <input type="checkbox" class="DoOrNot" checked=checked><span class="goal">시간을 자동으로 파악해서 주간 야간 모드 변경하는 것은 getTime 함수를 조금 더 공부해보면 금방 할 수 있을 것 같다. 또 이번에 책에서 배운 것처럼 도전과제를 설정해놓고 체크하면 스타일이 변하게 표 자체를 개편하고 싶다. 코드는 간단할 것 같은데 반복작업이 너무 많다. 일단 이 셀에 대해서만 적용해보자. index.html 하고싶은 것에서 GTQ를 제외한 나머지는 아직 파일이 없기 때문에 링크에 밑줄을 숨기고 싶다. style.textDecoration으로 시도해봤는데 안 됐다. 이유를 알아봐야겠다. href="#"의 의미도 알아봐야겠다.
 9/7 자유시간
   어제 궁금했던 점들을 알아보고 고쳤다. 나만의 도메인 네임 갖기 전까지 DNS 강좌를 몇 개 더 들었다.
   하고 싶은 것들의 밑줄을 없애는 것은 그냥 if문을 이용해서 수정했다. 근데 이렇게 하는 것은 다른 파일들이 생겼을 때 코드자체를 수정해야 하는 점이 마음에 들지 않는다.(좋은 코드가 아니다.) 파일이 있는지 없는지 인식하고 밑줄을 표시하는게 제일 베스트인 것 같다. a href="#"은 누르면 페이지의 맨 위로 이동하게 하는 것이다. Click Dropdowns는 내 수준을 넘어선 것 같다.. target이 문제인 줄 알았는데 검색해보니 원래 그렇게 쓰는 거였다. 일단 hover만 되게 해놓았고 나중에 실력이 늘면 다시 들여다 볼 생각이다. 시간을 자동으로 인식해 모드를 바꾸는 것도 추가하였다. 의외로 간단했는데 script 태그를 앞부분에 사용해서 오류가 떴다. 왜냐면 코드를 작성할 때도 js로 a tag를 썼는데 그 전에 script 태그가 들어가있어서 a tag 글씨를 하얀색으로 바꾼 다음 덮어쓰게 된 것이다. 그래서 맨 마지막으로 뺐더니 잘 동작하였다. nslookup으로 playcebo.com을 쳐봤는데 이미 누가 쓰고 있는 것 같다.. 나만의 이름인줄 알았는데ㅜㅜ 일단 다음에 나만의 도네임 네임 갖기 강좌가 기대된다. 선임 분이 더 좋은 코딩 방법을 알려주셨다. 함수를 만드는 것 말고 html 코드를 짤 때 미리 class별로 다 css를 만들어놓고 나중에 그게 필요할 때 Javascript로 특정 태그에 class를 추가하는 식으로 하는 것이다. 확실히 이렇게 하면 객체나 이런 것에 따로 저장할 필요 없이 간단히 코딩할 수 있을 것 같다. 다음에 할 때는 이 방법을 사용해 볼 생각이다. (element.addClassList 였나 비슷한 JS 함수 찾아보면 된다. 주식일지를 좀 더 체계적으로 만드는 것이다. 느낀 점 뿐만 아니라 매수가, 매도가, 기간 수익률뿐만 아니라 적금에 비에 얼마나 큰 수익이 났는지 계산하는 프로그램도 넣고 싶다. (분할 매수도 다 고려해서 계산) 길게 봐서는 분할 매수한 것들도 수익률을 따로따로 표시할 수 있는 기능도 있으면 좋겠다. -> 파이썬 프로그램 삽입기능 배우고 활용하자.  header, nav 태그 등 다른 사람이 소스를 볼 때 유용한 태그 등을 추가해서 index.html을 정리해봐야겠다. 한 번 goal을 체크하면 다음에 접속했을 때도 유지되어있게 바꾸고 싶다. (html checkbox stay checked 검색해서 참조)
 9/9 자기계발시간
   DNS 강좌를 다 들었다.
   끝까지 안 들었을 때는 DNS에 IP를 넣을 때 무엇을 넣어야 되는지 헷갈렸다. 그건 알고 보니 내가 직접 웹서버를 운영하는 경우인 것 같다. WEB1 강좌의 웹서버 운영하기를 보면서 다시 해볼 생각이다. 하지만 꼭 웹서버를 운영하지 않아도 할 수 있는 방법이 있었다. 그건 바로 깃허브에 도메인 네임을 연결하는 것이다. 이 방법이 지금 현실적으로 가장 편하고 쉬운 방법인 것 같다. 첫 번째 방법의 경우에는 아직 단점이 있다. IP가 바뀌는 것을 반영하지 못한다. 따라서 첫 번째 방법은 일단 시도만 해보고 나중에 필요할 때 Dynamic DNS라는 것을 찾아서 공부해보면 될 것 같다. DNS 깃허브에 연결해보기, 웹서버 운영하기 다시 보고 첫 번째 방법도 시도해보기
 9/12 자유시간, 자기계발시간
   궁금했던 점들을 해결해보려 했다.
   체크박스 체크 유지를 계속 웹서핑해서 나와있는 코드를 복붙해서 사용해봤는데 계속 동작이 안 되었다. 백엔드 자료가 없어서인지 jQuery 버전 때문인지는 모르겠다. 그래서 일단은 checked = checked 속성을 이용해서 코드적으로만 바꾸어놓았다. 진짜 이건 궁여지책으로 너무 안 좋은 방법이다. playcebo.tk 라는 DNS를 만들어서 깃허브와 연결시켰다. 처음에는 하라는대로 했는데도 불구하고 안 되길래 당황했는데 조금 기다리니까 됐다. 굉장히 뿌듯했다. 이제 playcebo.tk로 들어라고만 하면 쉽게 설명 가능하다. IP를 알아내서 하는 것은 핫스팟이라 불가능할 것 같고 웹서버 운영하기 강의와도 알고보니 상관이 없었다. 그런데 깃허브에 연결하니까 배경이미지 위치를 찾을 수 없다고 떴다. 이것을 해결하기 위해 절대참조를 알아봐야할 것 같다. -> 폴더 형식으로 상대 위치를 지정했는데 깃허브에는 폴더가 올라가지 않아 오류가 뜬 것 같다. 그래서 일단 폴더 밖으로 다 뺀 이미지들을 깃허브에 올렸고, 코드도 폴더를 제외해서 수정하였다. 자계시간에는 책을 다시 읽어보고 코드의 구성을 좀 더 잘 파악할 수 있게 header, article, section, footer 태그 등을 이용해서 index.html을 바꿔보았다. 이렇게 하니까 확실히 개발자 도구로 볼 때 깔끔해졌다.  모바일로 사이트에 접속해보니 화면이 축소해져서 나오고, 아래쪽으로 빈 배경만 반복된다. 모바일로 봤을 때도 보기 이쁜 형태로 만드는 방법을 알아봐야겠다. 화면 크기별로 유동적으로 크기가 변하게 하고 싶다. -> 책에 반응형 웹 부분을 찾아보거나 media query를 이용해서 하면 될 것 같다.
 9/16 자기계발시간
   Web2 Python 강좌를 실습환경 준비까지 봤다.
   일단 지금 sound of coding이 맨 마지막 강좐데 무엇을 배우는지 대충 감을 잡기 위해 먼저 보았는데 굉장한 충격에 빠졌다. 내가 넣고 싶은 기능 모든 것이 다 들어있는 것 같다! 일단 내 스스로 일지를 작성할 때도 코드 내에서 복붙으로 작성해야 한다는 게 너무 불편하고, 하나의 파일 길이가 매우 길어지게 됐는데 이것을 배우고 난 뒤에는 안 그럴 것 같다는 희망이 생겼다. 또한 방문자들도 글을 작성할 수 있게 만들 수 있을 것 같다! 실습환경 준비 영상을 보고 따라해봤는데 똑같이 구현이 되지 않는다.. 굉장한 절망이다. 첫발을 떼려는 순간 너무 큰 장애물을 만나버렸다. 다음 휴무 때 와이파이 연결 후 상황과 파이썬, 비트나미 재설치해서까지 되지 않으면 너무 절망적일 것 같다 ㅜㅜ
 9/19 휴무
   오류 해결
   파이썬, 비트나미를 지우고 다시 깔고 따라해봤는데 드디어 됐다!!! 그 희열은 말로 표현 못 한다. 이제 파이썬 수업 재밌게 들을 수 있겠다.
 9/20 자기계발시간
   파이썬 강좌 반복문 활용 전까지 들었다.
   import os.path \n os.path.exists('파일명')을 실행하면 폴더에 해당 파일이 있는지를 알 수 있다. 따라서 이를 통해 앞으로 하고 싶은 것에서 파일이 있는지 인식해서 코드를 다시 짤 수 있겠다. 파이썬 문법은 어느정도 점프투파이썬으로 배운 상태라 파이썬 문법을 다루는 것은 건너뛰면서 간단히 복습하고 어떤 식으로 수업이 진행되는지 파악하였다. 아 그리고 파이썬으로 index.py를 실행시킬 때 한글이 깨진다. 이유를 알아봐야겠다.
 9/22~25 외박중
   파이썬 강좌 활용을 듣고 적용해보았다.
   시행착오도 많이 겪었지만 수확도 많았다. 이제 create update가 구현되게 해야하는데 파일을 만드는 코드가 잘 실행이 안 된다. 내일 왜 그런지 알아봐야겠다.
 9/26 휴무
   오류를 해결하고 update도 되게 하려고 시도했다.
   선임분께 물어본 끝에 이제 목록을 create 하는 것을 잘 된다. 그런데 update 파일을 만들려고 똑같이 코드를 짰는데 이번에는 오류가 뜬다. 이건 도대체 왜 이런 것일까... 생활코딩 강좌와 다른 점을 내 페이지에 적용하기 위해서 여러 아이디어를 시험해보다가 난관에 부딪혔다. 선임분께 완전 똑같은 질문을 하기도 그런데.. 일단 좀 더 고민해봐야겠다.
 9/29 민생치안
   오늘의 하루 추가하기 기능을 추가하려 해보았다.
   저번에 겪었던 오류는 header를 잘못 써서 생긴 오류였다. 역시 조금 지나서 다시 보니 금방 보이는 것 같다. 항상 문제가 생기면 파묻히지 말자. 그래서 오늘은 추가하기 기능을 완성시키려 해보았다. 파이썬의 readlines() 기능을 이용해 database 내용을 list로 저장하여 반복문으로 바꾸는 시도까지는 성공적이었는데 totalbody가 한 번에 저장된다는 문제 때문에 완전히 완성시키지는 못 했다. 조금만 고민해보면 답이 나올 것 같지만 일단 다음 시간으로 미뤄야겠다. 그리고 절대참조 주소를 지정하는 법을 알아봐야겠다. 자꾸 상대참조로 되어서 폴더 안의 파일은 폴더 안에서만 이동하려 한다.
 9/30 민생치안
   오늘의 하루 추가하기 기능을 수정하였고 뒷부분 강의를 들었다.
   일단 TotalBody 문제는 잘 해결했다. 너무 복잡하게 생각했던 것이 문제였다. 코드를 훨씬 간단하게 하면서도 수정할 수 있었다. 내일은 무조건 절대참조 기능을 알아보고 그게 된다면 processing 폴더에 update와 process_update만 넣어도 될 수 있어서 목록 짜기도 편할 것 같다. 그리고 이제 iamdoing의 html 파일들을 다 py 파일로 바꿀 수도 있을 것 같다. 그것마다 update를 만들면 안 좋으니까 cgi의 id를 통해 하나로도 잘 구분할 수 있을 것 같다. 이거는 절대참조를 알고 나서 시도해볼 생각이다. 내용별 수정 기능은 만들기 어려울 것 같고, 삭제 기능은 위에 것 다 마무리 되면 추가해봐야겠다.
 10/4 휴무
   database파일로 작성할 수 있게 하려 했다.
   일단 절대참조를 알아내었고 그것을 통해 간단히 만들 수 있는 토대는 짰다. 그런데 문제는 database에 한글을 쓰면 인코딩 문제로 인식되지 않는다. 그렇다고 .py를 써서 인코딩 하고 중간부터 내용을 읽게 해도 문제가 생겼다. 영어로만 쓰면 문제없지만 그동안 써온 것을 번역할 수도 없는 노릇. 인코딩 문제를 해결해야한다. 또한 주식일지는 코드가 약간 달라 TotalBody 하나로 안 되고 약간은 변경해야한다. web의 span태그도 마찬가지. 그리고 모든 .py 파일마다 초반에 TotalBody 만드는 코드가 중복돼서 들어가는데 이거는 저번에 본 영상을 활용해서 객체화시키면 좋을 것 같다. 그리고 python 백엔드만 계속 손보다 보니 html 파일에 쓰기가 귀찮아지고 깃허브에도 업로드를 잘 안 하게 된다. 아파치 서버를 연동하는 방법도 알아봐야겠다. nodeJS 강의도 다운 받아놔야겠다. 그리고 color.js가 일부 작동하지 않는다. 낮밤모드 바뀌는 거도 작동이 안 되는데 아마도 jquery 사이트 참조가 안 되어서 그런 것 같다. 나중에 인터넷 연결해서 다시 시도해봐야겠다.
10/12~10/13
주식일지, 일기, Web.py 오류를 손 봤다.
어제는 불침번을 급하게 나가서 공부한 것을 기록을 못 했다. 오늘 웬만한 기능은 다 작동되게 하였다. 전에 생각했던 웹.py의 오류는 용량 때문이 아니라 단순 오타였다. ㅎㅎ 주식 일지에 종목 개수별로 li 태그가 생기도록 하지 못한 것은 아쉽지만 그렇게 보기 싫진 않다.이제 삭제 기능을 추가하고 싶고, 빨리 엄마 돈 지출 내역을 적어 놓는 파이썬 파일도 만들고 싶다. 잔고 내역과 구매 내역 파이썬으로 계산하게 나오면 좋을 것 같다.
11/10
오랜만의 웹 공부라 새로운 공부는 하지 않았고, 혹시 그동안 했던 것 까먹을까봐 코드들 다시 한 번 읽어보았다.
다행히 이해 안 되는 것은 없는 거 보니 아직 기억이 살아있는 것 같다! heroku에 .py 파일을 호스팅해보는 것이 휴무 때 목표고 heroku가 익숙해지면 nodejs에 최적화되어있다 하니 nodejs 강의를 들어볼 생각이다.
